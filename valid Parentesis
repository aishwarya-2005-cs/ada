#include <stdbool.h>
#include <string.h>

bool isValid(char* s) {
    int length = strlen(s);
    char stack[length];  // Create stack of size equal to the string length
    int top = -1;  // Stack is initially empty

    for (int i = 0; s[i] != '\0'; i++) {
        if (s[i] == '(' || s[i] == '{' || s[i] == '[') {
            // Push opening brackets onto stack
            stack[++top] = s[i];
        } else {
            // If stack is empty or mismatch, return false
            if (top == -1 || 
                (s[i] == ')' && stack[top] != '(') ||
                (s[i] == '}' && stack[top] != '{') ||
                (s[i] == ']' && stack[top] != '[')) {
                return false;
            }
            // Pop from stack if it's a valid pair
            top--;
        }
    }

    // If the stack is empty, all brackets are matched
    return top == -1;
}
