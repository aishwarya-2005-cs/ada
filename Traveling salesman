#include <stdio.h>
#include <limits.h>

#define V 4  // Number of cities

int tsp(int graph[V][V], int visited[], int currPos, int n, int count, int cost, int ans) {
    if (count == n && graph[currPos][0]) {
        ans = (cost + graph[currPos][0] < ans) ? cost + graph[currPos][0] : ans;
        return ans;
    }

    for (int i = 0; i < n; i++) {
        if (!visited[i] && graph[currPos][i]) {
            visited[i] = 1;
            ans = tsp(graph, visited, i, n, count + 1, cost + graph[currPos][i], ans);
            visited[i] = 0;  // Backtrack
        }
    }
    return ans;
}

int main() {
    int graph[V][V];
    printf("Enter the %d x %d cost matrix:\n", V, V);

    for (int i = 0; i < V; i++) {
        for (int j = 0; j < V; j++) {
            scanf("%d", &graph[i][j]);
        }
    }

    int visited[V];
    for (int i = 0; i < V; i++)
        visited[i] = 0;

    visited[0] = 1; // start from city 0
    int ans = tsp(graph, visited, 0, V, 1, 0, INT_MAX);

    printf("Minimum cost of travelling: %d\n", ans);

    return 0;
}
